{"version":3,"sources":["components/Card.js","components/HabitsView.js","components/RoutineView.js","components/ModalBox.js","components/AddHabitView.js","components/EditRoutineView.js","components/HabitStatusView.js","components/CalendarView.js","components/TodoView.js","components/HabitStats.js","components/AddTodoView.js","components/Container.js","components/Column.js","components/ToggleButton.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","size","children","HabitsView","undefined","habits","length","onClick","add","map","element","index","key","id","remove","name","description","showStats","RoutinesView","markGreen","from","to","fromTimeArray","split","toTimeArray","currentHour","Date","getHours","getMinutes","routines","change","ModalBox","closeModal","AddHabitView","useState","habitName","setHabitName","habitDescription","setHabitDescription","placeholder","onChange","e","target","value","addNew","EditRoutineView","setRoutines","newRoutineName","setNewRoutineName","newRoutineFrom","setNewRoutineFrom","newRoutineTo","setNewRoutineTo","newRoutine","temp","push","changeRoutineState","type","splice","HabitStatusView","data","option","setOption","isChecked","setChecked","defaultChecked","habit","date","defaultValue","CalendarView","dates","setDates","isLoading","setLoading","renderDates","currDate","datesRendered","setDate","getDate","useEffect","selectedDate","habitStats","updateHabitStat","getMonth","getFullYear","renderHabits","TodoView","todos","done","marknotdone","markdone","HabitStats","chartData","setChartData","xp","Object","keys","array","entries","i","renderXp","labels","datasets","label","backgroundColor","borderWidth","AddTodoView","todoName","setTodoName","todoDescription","setTodoDescription","Container","Column","ToggleButton","btnstatus","text","Home","setHabits","setHabitStats","habitStat","setHabitStat","JSON","parse","localStorage","getItem","allTodos","setAllTodos","habitModal","setHabitModal","habitStatModal","setHabitStatModal","todoModal","setTodoModal","routineModal","setRoutineModal","selectDate","setSelectDate","toggleTodos","setToggleTodos","toggleRoutines","setToggleRoutines","setTodos","renderTodos","newHabit","tempHabits","r","newTodo","tempTodos","tempObj","onMouseLeave","setItem","stringify","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b298381.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card(props) {\r\n   return(\r\n       <div className={props.size}>\r\n           {props.children}\r\n       </div>\r\n   ) \r\n}\r\n\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\nimport './Component.css';\r\n\r\nfunction HabitsView(props) {\r\n    if (props.habits === undefined || props.habits === [] || props.habits === null || props.habits.length < 1) {\r\n        return (\r\n            <div>\r\n                <div className=\"HabitsHeader\">\r\n                    <div><h3>Habits</h3></div>\r\n                    <div><button onClick={props.add}>+</button></div>\r\n                </div>\r\n                <p>No habits found...</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div className=\"HabitsHeader\">\r\n                    <div><h3>Habits</h3></div>\r\n                    <div><button onClick={props.add}>+</button></div>\r\n                </div>\r\n                <ul>\r\n                    {props.habits.map((element, index) => {\r\n                        return (<li key={index}>\r\n                            <Card size=\"SmallCard\">\r\n                                <button id=\"RemoveBtn\" onClick={() => { props.remove(index) }}>Remove</button>\r\n                                <h4>{element.name}</h4>\r\n                                <p>{element.description}</p>\r\n                                <button onClick={()=>{props.showStats(element.name)}} id=\"statsbtn\">View Stats</button>\r\n                            </Card>\r\n                        </li>)\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HabitsView;\r\n","import React from 'react';\r\nimport './Component.css';\r\nimport Card from './Card';\r\n\r\nfunction RoutinesView(props) {\r\n\r\n    function markGreen(from, to) {\r\n        let fromTimeArray = from.split(\":\");\r\n        let toTimeArray = to.split(\":\");\r\n        let currentHour = new Date().getHours();\r\n        let currentMinutes = new Date().getMinutes();\r\n        if (fromTimeArray[0] < currentHour && toTimeArray[0] > currentHour) {\r\n            return 'current';\r\n        } else if (fromTimeArray[0] > currentHour) {\r\n            return 'upcoming';\r\n        } else {\r\n            return 'over';\r\n        }\r\n    }\r\n\r\n    if (props.routines === undefined || props.routines === [] || props.routines === null || props.routines.length < 1) {\r\n        return (\r\n            <div>\r\n                <p>No routines...</p>\r\n                <button className=\"RoutineColumnBtn\" onClick={props.change}>Change the Routine</button>\r\n            </div>\r\n        );\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {props.routines.map((element, index) => {\r\n                        if (markGreen(element.from, element.to) === 'current') {\r\n                            return (<li key={index}>\r\n                                <Card size=\"SmallCard\">\r\n                                    <p className=\"ongoingtext\"><span className=\"dot\"></span>OnGoing</p>\r\n                                    <h4>{element.name}</h4>\r\n                                    <p>{element.from} - {element.to}</p>\r\n                                </Card>\r\n                            </li>)\r\n                        } else if (markGreen(element.from, element.to) === 'upcoming') {\r\n                            return (<li key={index}>\r\n                                <Card size=\"SmallCard\">\r\n                                    <p className=\"upcomingtext\"><span className=\"dot\"></span>UpComing</p>\r\n                                    <h4>{element.name}</h4>\r\n                                    <p>{element.from} - {element.to}</p>\r\n                                </Card>\r\n                            </li>)\r\n                        } else {\r\n                            return (<li key={index}>\r\n                                <Card size=\"SmallCard\">\r\n                                    <p className=\"gotovertext\"><span className=\"dot\"></span>Got Over</p>\r\n                                    <h4>{element.name}</h4>\r\n                                    <p>{element.from} - {element.to}</p>\r\n                                </Card>\r\n                            </li>)\r\n                        }\r\n                    })}\r\n                </ul>\r\n                <button className=\"RoutineColumnBtn\" onClick={props.change}>Change the Routine</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoutinesView;\r\n","import React from 'react';\r\nimport './Component.css';\r\n\r\nfunction ModalBox(props) {\r\n    return (\r\n        <div className={props.size}>\r\n            <button id=\"CloseBtn\" onClick={props.closeModal}>Close X</button>\r\n            {props.children}        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalBox;\r\n","import React, { useState } from 'react';\r\nimport './Component.css';\r\n\r\nfunction AddHabitView(props) {\r\n    const [habitName,setHabitName] = useState(\"\");\r\n    const [habitDescription,setHabitDescription] = useState(\"\");\r\n    \r\n    return (\r\n        <div>\r\n            <input placeholder=\"Enter Habit Name\" onChange={(e)=>{setHabitName(e.target.value)}}/>\r\n            <input placeholder=\"Enter Description\" onChange={(e)=>{setHabitDescription(e.target.value)}}/>\r\n            <button onClick={()=>{props.addNew(habitName,habitDescription)}}>Add Habit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddHabitView;\r\n","import React, { useState } from 'react';\r\n\r\nfunction EditRoutineView(props) {\r\n    const [routines, setRoutines] = useState(props.routines);\r\n\r\n    const [newRoutineName, setNewRoutineName] = useState(\"Enter Name\");\r\n    const [newRoutineFrom, setNewRoutineFrom] = useState(\"Enter From\");\r\n    const [newRoutineTo, setNewRoutineTo] = useState(\"Enter To\");\r\n\r\n    function remove(index) {\r\n        let temp = [...routines];\r\n        temp.splice(index, 1);\r\n        setRoutines(temp);\r\n    }\r\n\r\n    function add() {\r\n        let newRoutine = {\r\n            \"name\": newRoutineName,\r\n            \"from\": newRoutineFrom,\r\n            \"to\": newRoutineTo\r\n        }\r\n        if (routines === null) {\r\n            let temp = [];\r\n            temp.push(newRoutine);\r\n            setRoutines(temp);\r\n            setNewRoutineName(\"Enter Name\");\r\n            setNewRoutineTo(\"Enter From\");\r\n            setNewRoutineFrom(\"Enter To\");\r\n        }\r\n        else {\r\n            let temp = [...routines];\r\n            temp.push(newRoutine);\r\n            setRoutines(temp);\r\n            setNewRoutineName(\"Enter Name\");\r\n            setNewRoutineTo(\"Enter From\");\r\n            setNewRoutineFrom(\"Enter To\");\r\n        }\r\n    }\r\n\r\n    function changeRoutineState(type, index, value) {\r\n        let temp = [...routines];\r\n        temp[index][type] = value;\r\n        setRoutines(temp);\r\n    }\r\n\r\n    if (props.routines === null || props.routines.length < 1) {\r\n        return (\r\n            <div>\r\n                <p>No Routines..</p>\r\n                <ul>\r\n                    <li>\r\n                        <h4><input placeholder={newRoutineName} onChange={(e) => setNewRoutineName(e.target.value)} /></h4>\r\n                        <p><input type=\"time\" placeholder={newRoutineFrom} onChange={(e) => setNewRoutineFrom(e.target.value)} /><input type=\"time\" placeholder={newRoutineTo} onChange={(e) => setNewRoutineTo(e.target.value)} /></p>\r\n                        <button onClick={add}>Add</button>\r\n                    </li>\r\n                </ul>\r\n                <button onClick={() => { props.change(routines) }}>Update</button>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {routines.map((element, index) => {\r\n                        return (<li key={index}>\r\n                            <h4><input value={element.name} onChange={(e) => changeRoutineState(\"name\", index, e.target.value)} /></h4>\r\n                            <p><input id=\"timeinput\" type=\"time\" value={element.from} onChange={(e) => changeRoutineState(\"from\", index, e.target.value)} /><input id=\"timeinput\" type=\"time\" value={element.to} onChange={(e) => changeRoutineState(\"to\", index, e.target.value)} /></p>\r\n                            <button onClick={() => { remove(index) }}>Remove</button>\r\n                        </li>)\r\n                    })}\r\n                    <li>\r\n                        <h4><input placeholder={newRoutineName} onChange={(e) => setNewRoutineName(e.target.value)} /></h4>\r\n                        <p><input id=\"timeinput\" type=\"time\" placeholder={newRoutineFrom} onChange={(e) => setNewRoutineFrom(e.target.value)} /><input id=\"timeinput\" type=\"time\" placeholder={newRoutineTo} onChange={(e) => setNewRoutineTo(e.target.value)} /></p>\r\n                        <button onClick={add}>Add</button>\r\n                    </li>\r\n                </ul>\r\n                <button onClick={() => { props.change(routines) }}>Update</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditRoutineView","import React, { useState } from 'react';\r\n\r\nfunction HabitStatusView(props){\r\n    const [option,setOption] = useState(returnDefaultOption());\r\n    const [isChecked,setChecked] = useState(returnChecked());\r\n\r\n    function returnChecked(){\r\n        if(props.data===null){\r\n            return false;\r\n        } else {\r\n            if(props.data['done']==='true'){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function returnDefaultOption() {\r\n        if(props.data===null){\r\n            return \"0\";\r\n        } else {\r\n            return props.data['xp'];\r\n        }        \r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <input type=\"checkbox\" defaultChecked={isChecked} onChange={()=>{setChecked(!isChecked)}} onClick={()=>{props.onClick(props.habit,props.date,option,!isChecked)}}/><br/>\r\n\r\n            <select defaultValue={option} onChange={e=>{setOption(e.target.value)}}>\r\n                <option value=\"0\">Select..</option>\r\n                <option value=\"5\">Extremely Satisfied</option>\r\n                <option value=\"4\">Somewhat Satisfied</option>\r\n                <option value=\"3\">I tried my level best</option>\r\n                <option value=\"2\">Need improvement</option>\r\n                <option value=\"1\">I did really bad</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HabitStatusView","import React, { useEffect, useState } from 'react';\r\nimport HabitStatusView from './HabitStatusView';\r\n\r\nfunction CalendarView(props) {\r\n\r\n    const [dates, setDates] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    function renderDates(currDate) {\r\n        let datesRendered = [];\r\n        datesRendered.push(currDate);\r\n        for (let index = 1; index <= 3; index++) {\r\n            let temp = new Date();\r\n            temp.setDate(currDate + index);\r\n            datesRendered.push(temp.getDate());\r\n        }\r\n        return datesRendered;\r\n    }\r\n\r\n    function renderHabits(habit, index) {\r\n        if (props.habitStats === null) {\r\n            return <tr key={index}>\r\n                {dates.map((date, index) => {\r\n                    return <td key={index}><HabitStatusView data={null} date={date} habit={habit} onClick={props.updateHabitStat} /></td>\r\n                })}\r\n            </tr>\r\n        }\r\n        else if (props.habitStats[habit] === undefined) {\r\n            return <tr key={index}>\r\n                {dates.map((date, index) => {\r\n                    return <td key={index}><HabitStatusView data={null} date={date} habit={habit} onClick={props.updateHabitStat} /></td>\r\n                })}\r\n            </tr>\r\n        }\r\n        else {\r\n            return <tr key={index}>\r\n                {dates.map((date, index) => {\r\n                    let temp = props.habitStats[habit][date + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())]\r\n                    if (temp === undefined) {\r\n                        return <td key={index}><HabitStatusView data={null} date={date} habit={habit} onClick={props.updateHabitStat} /></td>\r\n                    } else {\r\n                        return <td key={index}><HabitStatusView data={temp} date={date} habit={habit} onClick={props.updateHabitStat} /></td>\r\n                    }\r\n                })}\r\n            </tr>\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setDates(renderDates(props.currDate));\r\n        setLoading(false);\r\n    }, [])\r\n\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <div>\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n    } else if(props.habits === null || props.habits === undefined || props.habits.length < 1) {\r\n        return (\r\n            <div>\r\n                <button onClick={()=>{setDates(renderDates(props.currDate-3))}} id=\"calenderchangebtn\">{\"<\"}</button><button onClick={()=>{setDates(renderDates(props.currDate+3))}} id=\"calenderchangebtn\">{\">\"}</button>\r\n                <table className=\"CalendarTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {\r\n                                dates.map((date, index) => {\r\n                                    if (date === props.currDate) {\r\n                                        return <th onClick={() => { props.selectedDate(date) }} key={index}><p id=\"selectedDate\">{date}</p></th>\r\n                                    } else {\r\n                                        return <th onClick={() => { props.selectedDate(date) }} key={index}><p>{date}</p></th>\r\n                                    }\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        <tr><td>No Habits...</td><td>No Habits...</td><td>No Habits...</td><td>No Habits...</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );        \r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <button onClick={()=>{setDates(renderDates(props.currDate-3))}} id=\"calenderchangebtn\">{\"<\"}</button><button onClick={()=>{setDates(renderDates(props.currDate+3))}} id=\"calenderchangebtn\">{\">\"}</button>\r\n                <table className=\"CalendarTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {\r\n                                dates.map((date, index) => {\r\n                                    if (date === props.currDate) {\r\n                                        return <th onClick={() => { props.selectedDate(date) }} key={index}><p id=\"selectedDate\">{date}</p></th>\r\n                                    } else {\r\n                                        return <th onClick={() => { props.selectedDate(date)  }} key={index}><p>{date}</p></th>\r\n                                    }\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            props.habits.map((habit, index) => {\r\n                                return renderHabits(habit['name'], index)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CalendarView","import React from 'react';\r\nimport './Component.css';\r\nimport Card from './Card';\r\n\r\nfunction TodoView(props) {\r\n    if (props.todos === undefined || props.todos === [] || props.todos === null || props.todos.length < 1) {\r\n        return (\r\n            <div>\r\n                <p>No Todos for today..</p>\r\n                <button className=\"ColumnBtn\" onClick={props.add}>Add Todo</button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {props.todos.map((element, index) => {\r\n                        if (element.done === \"true\") {\r\n                            return (<li key={index}>\r\n                                <Card size=\"SmallCard\">\r\n                                    <button id=\"UnDoBtn\" onClick={() => { props.marknotdone(index) }}>Undo</button>\r\n                                    <button id=\"RemoveBtn\" onClick={() => { props.remove(index) }}>remove</button>\r\n                                    <h4><strike>{element.name}</strike></h4>\r\n                                    <p><strike>{element.description}</strike></p>\r\n                                </Card>\r\n                            </li>)\r\n                        }\r\n                        else {\r\n                            return (<li key={index}>\r\n                                <Card size=\"SmallCard\">\r\n                                    <button id=\"DoBtn\" onClick={() => { props.markdone(index) }}>Done</button>\r\n                                    <button id=\"RemoveBtn\" onClick={() => { props.remove(index) }}>remove</button>\r\n                                    <h4>{element.name}</h4>\r\n                                    <p>{element.description}</p>\r\n                                </Card>\r\n                            </li>)\r\n                        }\r\n                    })}\r\n                </ul>\r\n                <button className=\"ColumnBtn\" onClick={props.add}>Add Todo</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction HabitStats(props) {\r\n\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    function renderDates() {\r\n        if (props.habitName === undefined || props.habitStats[props.habitName] === undefined) {\r\n            return [];\r\n        } else {\r\n            return Object.keys(props.habitStats[props.habitName]);\r\n        }\r\n    }\r\n\r\n    function renderXp() {\r\n        if (props.habitName === undefined || props.habitStats[props.habitName] === undefined) {\r\n            return [];\r\n        } else {\r\n            let array = [];\r\n            let temp = Object.entries(props.habitStats[props.habitName]);\r\n            for (let i = 0; i < temp.length; i++) {\r\n                array.push(temp[i][1]['xp']);\r\n            }\r\n            return array;\r\n        }\r\n    }\r\n\r\n\r\n    function chart(dates,xp) {\r\n        setChartData({\r\n            labels: dates,\r\n            datasets: [{\r\n                label: 'Happnies of habit',\r\n                data: xp,\r\n                backgroundColor: ['rgb(161, 55, 214)']\r\n            }],\r\n            borderWidth: 4\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        chart(renderDates(),renderXp())\r\n    },[props.habitName])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.habitName}</h1>\r\n            <Line data={chartData} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HabitStats","import React, { useState } from 'react';\r\nimport './Component.css';\r\n\r\nfunction AddTodoView(props) {\r\n    const [todoName,setTodoName] = useState(\"\");\r\n    const [todoDescription,setTodoDescription] = useState(\"\");\r\n    \r\n    return (\r\n        <div>\r\n            <input placeholder=\"Enter Todo Name\" onChange={(e)=>{setTodoName(e.target.value)}}/>\r\n            <input placeholder=\"Enter Description\" onChange={(e)=>{setTodoDescription(e.target.value)}}/>\r\n            <button onClick={()=>{props.addNew(todoName,todoDescription)}}>Add Todo</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTodoView;\r\n","import React from 'react';\r\n\r\nfunction Container(props) {\r\n   return(\r\n       <div className=\"Container\">\r\n           {props.children}\r\n       </div>\r\n   ) \r\n}\r\n\r\n\r\nexport default Container","import React from 'react';\r\n\r\nfunction Column(props) {\r\n   return(\r\n       <div className={props.size}>\r\n           {props.children}\r\n       </div>\r\n   ) \r\n}\r\n\r\n\r\nexport default Column","import React from 'react';\r\n\r\nfunction ToggleButton(props) {\r\n    return (\r\n        <div>\r\n            <button className={`${props.btnstatus}Btn`} onClick={props.onClick}>{props.text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToggleButton","import React, { useState, useEffect } from 'react';\r\n//Import external functions\r\nimport HabitsView from '../components/HabitsView';\r\nimport RoutinesView from '../components/RoutineView';\r\nimport ModalBox from '../components/ModalBox';\r\nimport './Pages.css'\r\nimport AddHabitView from '../components/AddHabitView';\r\nimport EditRoutinesView from '../components/EditRoutineView';\r\nimport CalendarView from '../components/CalendarView';\r\nimport TodoView from '../components/TodoView';\r\nimport HabitStats from '../components/HabitStats';\r\nimport AddTodoView from '../components/AddTodoView';\r\nimport Container from '../components/Container';\r\nimport Column from '../components/Column';\r\nimport ToggleButton from '../components/ToggleButton';\r\n\r\nfunction Home() {\r\n\r\n  const [habits, setHabits] = useState([]);\r\n  const [routines, setRoutines] = useState([]);\r\n  const [habitStats, setHabitStats] = useState({});\r\n  const [habitStat, setHabitStat] = useState();\r\n  const [allTodos, setAllTodos] = useState(JSON.parse(localStorage.getItem('todos')));\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [habitModal, setHabitModal] = useState(\"ModalClosed\");\r\n  const [habitStatModal, setHabitStatModal] = useState(\"ModalClosed\");\r\n  const [todoModal, setTodoModal] = useState(\"ModalClosed\");\r\n  const [routineModal, setRoutineModal] = useState(\"ModalClosed\");\r\n  const [selectDate, setSelectDate] = useState(new Date().getDate());\r\n  const [toggleTodos, setToggleTodos] = useState(\"ToggleOpen\");\r\n  const [toggleRoutines, setToggleRoutines] = useState(\"ToggleClosed\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setHabits(JSON.parse(localStorage.getItem('habits')));\r\n    setRoutines(JSON.parse(localStorage.getItem('routines')));\r\n    setHabitStats(JSON.parse(localStorage.getItem('habitstats')));\r\n    setTodos(renderTodos(selectDate));\r\n    setLoading(false);\r\n  }, []);\r\n\r\n\r\n\r\n  function saveToStorage() {\r\n    localStorage.setItem('habits', JSON.stringify(habits));\r\n    localStorage.setItem('routines', JSON.stringify(routines));\r\n    localStorage.setItem('habitstats', JSON.stringify(habitStats));\r\n    localStorage.setItem('todos', JSON.stringify(allTodos));\r\n  }\r\n\r\n  function renderTodos(currDate) {\r\n    if (allTodos !== null) {\r\n      let dateTodo = allTodos[currDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())]\r\n      return dateTodo;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function addHabit(name, description) {\r\n    let newHabit = {\r\n      \"name\": name,\r\n      \"description\": description\r\n    };\r\n    if (habits === null) {\r\n      let tempHabits = [];\r\n      tempHabits.push(newHabit);\r\n      setHabits(tempHabits);\r\n      setHabitModal(\"ModalClosed\");\r\n    } else {\r\n      let tempHabits = [...habits];\r\n      tempHabits.push(newHabit);\r\n      setHabits(tempHabits);\r\n      setHabitModal(\"ModalClosed\");\r\n    }\r\n  }\r\n\r\n  function removeHabit(index) {\r\n    let temp = [...habits];\r\n    temp.splice(index, 1);\r\n    setHabits(temp);\r\n  }\r\n\r\n  function updateHabitStat(habit, date, option, isChecked) {\r\n    if (option >= 1 && option <= 5) {\r\n      if (habitStats === null) {\r\n        let temp = {};\r\n        temp[date + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = {\r\n          'done': `${isChecked}`,\r\n          'xp': `${option}`\r\n        };\r\n        let tempObj = {};\r\n        tempObj[habit] = temp;\r\n        setHabitStats(temp);\r\n      } else if (habitStats[habit] === undefined) {\r\n        let temp = {};\r\n        temp[date + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = {\r\n          'done': `${isChecked}`,\r\n          'xp': `${option}`\r\n        };\r\n        let tempObj = { ...habitStats };\r\n        tempObj[habit] = temp;\r\n        setHabitStats(tempObj);\r\n      } else {\r\n        let tempObj = { ...habitStats };\r\n        tempObj[habit][date + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = {\r\n          'done': `${isChecked}`,\r\n          'xp': `${option}`\r\n        };\r\n        setHabitStats(tempObj);\r\n      }\r\n    }\r\n  }\r\n\r\n  function showHabitStat(habitName){\r\n    setHabitStat(habitName)\r\n    setHabitStatModal(\"ModalOpen\")\r\n  }\r\n\r\n  function editRoutines(r) {\r\n    setRoutines(r);\r\n    setRoutineModal(\"ModalClosed\");\r\n  }\r\n\r\n  function markTodoDone(index) {\r\n    let temp = [...todos];\r\n    temp[index][\"done\"] = \"true\";\r\n    setTodos(temp);\r\n    if (allTodos === undefined) {\r\n      let tempObj = {};\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    } else {\r\n      let tempObj = { ...allTodos };\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    }\r\n  }\r\n\r\n  function markTodoNotDone(index) {\r\n    let temp = [...todos];\r\n    temp[index][\"done\"] = \"false\";\r\n    setTodos(temp);\r\n    if (allTodos === undefined) {\r\n      let tempObj = {};\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    } else {\r\n      let tempObj = { ...allTodos };\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    }\r\n  }\r\n\r\n  function removeTodo(index) {\r\n    let temp = [...todos];\r\n    temp.splice(index, 1);\r\n    setTodos(temp);\r\n    if (allTodos === undefined) {\r\n      let tempObj = {};\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    } else {\r\n      let tempObj = { ...allTodos };\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    }\r\n  }\r\n\r\n  function addTodo(name, description) {\r\n    let newTodo = {\r\n      \"name\": name,\r\n      \"description\": description\r\n    };\r\n    let temp = [];\r\n    if (todos === undefined) {\r\n      let tempTodos = [];\r\n      tempTodos.push(newTodo);\r\n      setTodos(tempTodos);\r\n      temp = tempTodos;\r\n      setTodoModal(\"ModalClosed\");\r\n    } else {\r\n      let tempTodos = [...todos];\r\n      tempTodos.push(newTodo);\r\n      setTodos(tempTodos);\r\n      temp = tempTodos;\r\n      setTodoModal(\"ModalClosed\");\r\n    }\r\n    if (allTodos === undefined) {\r\n      let tempObj = {};\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    } else {\r\n      let tempObj = { ...allTodos };\r\n      tempObj[selectDate + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getFullYear())] = temp;\r\n      setAllTodos(tempObj);\r\n    }\r\n\r\n  }\r\n\r\n  if (isLoading === true) {\r\n    return (\r\n      <div>\r\n        <h1>Loading App..</h1>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"HomeContainer\">\r\n          <h1>Hi, Harish</h1>\r\n          <div className={habitModal}>\r\n            <ModalBox closeModal={() => { setHabitModal(\"ModalClosed\") }} size=\"MediumModalBox\">\r\n              <AddHabitView addNew={addHabit} />\r\n            </ModalBox>\r\n          </div>\r\n          <div className={routineModal}>\r\n            <ModalBox closeModal={() => { setRoutineModal(\"ModalClosed\") }} size=\"LargeModalBox\">\r\n              <EditRoutinesView change={editRoutines} routines={routines} />\r\n            </ModalBox>\r\n          </div>\r\n          <div className={todoModal}>\r\n            <ModalBox closeModal={() => { setTodoModal(\"ModalClosed\") }} size=\"MediumModalBox\">\r\n              <AddTodoView addNew={addTodo} />\r\n            </ModalBox>\r\n          </div>\r\n          <div className={habitStatModal}>\r\n            <ModalBox closeModal={() => { setHabitStatModal(\"ModalClosed\") }} size=\"LargeModalBox\">\r\n              <HabitStats habitStats={habitStats} habitName={habitStat}/>\r\n            </ModalBox>\r\n          </div>\r\n          <div className=\"HomeViews\" onMouseLeave={saveToStorage}>\r\n            <Container>\r\n              <div id=\"HomeView\"><Column size=\"MediumColumn\"><HabitsView showStats={showHabitStat} habits={habits} add={() => { setHabitModal(\"ModalOpen\"); }} remove={removeHabit} /></Column></div>\r\n              <div id=\"HomeView\"><Column size=\"LargeColumn\"><CalendarView habits={habits} habitStats={habitStats} updateHabitStat={updateHabitStat} currDate={selectDate} selectedDate={(date) => { setSelectDate(date); setTodos(renderTodos(date)) }} /></Column></div>\r\n              <div id=\"HomeView\">\r\n                <Column size=\"MediumColumn\">\r\n                  <div className=\"btn-group\">\r\n                    <div><ToggleButton btnstatus={toggleTodos} onClick={() => { setToggleRoutines(\"ToggleClosed\"); setToggleTodos(\"ToggleOpen\") }} text=\"Todos\" /></div>\r\n                    <div><ToggleButton btnstatus={toggleRoutines} onClick={() => { setToggleRoutines(\"ToggleOpen\"); setToggleTodos(\"ToggleClosed\") }} text=\"Routines\" /></div>\r\n                  </div>\r\n                  <div className={toggleRoutines}><RoutinesView routines={routines} change={() => { setRoutineModal(\"ModalOpen\") }} /></div>\r\n                  <div className={toggleTodos}><TodoView add={() => { setTodoModal(\"ModalOpen\"); }} todos={todos} remove={removeTodo} markdone={markTodoDone} marknotdone={markTodoNotDone} /></div>\r\n                </Column>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home  />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}